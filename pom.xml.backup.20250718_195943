<?xml version="1.0" encoding="UTF-8"?>
<!--
    File: /var/www/davestj.com/bthl-hc/pom.xml
    Author: davestj (David St John)
    Date: 2025-07-17
    Purpose: Maven project configuration for BTHL-HealthCare Spring Boot application
    Description: I created this Maven POM to define all dependencies, plugins, and build configuration
                 for my healthcare management platform. I've included Spring Boot, Security, JPA,
                 PostgreSQL driver, and additional libraries for comprehensive functionality.
                 I corrected the Java 21 compilation issue by removing preview features.

    Changelog:
    2025-07-16: Initial creation of Maven POM with Spring Boot 3.2.0 and Java 21 configuration
    2025-07-17: Fixed Java 21 compilation error by removing enable-preview compiler flag

    Git Commit: git commit -m "fix: remove Java preview features flag to resolve compilation error with Java 21"

    Next Dev Feature: Add Docker containerization with multi-stage builds and production profiles
    TODO: Integrate SonarQube plugin for code quality analysis and security scanning
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- I inherit from Spring Boot parent to get managed dependency versions -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version>
        <relativePath/>
    </parent>

    <!-- I define my project coordinates and basic information -->
    <groupId>com.bthl</groupId>
    <artifactId>healthcare</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>BTHL-HealthCare</name>
    <description>Enterprise Healthcare Management Platform with AI-Enhanced Analytics</description>

    <!-- I set Java 21 as my target version for modern language features -->
    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- I define version properties for better dependency management -->
        <spring-security.version>6.2.0</spring-security.version>
        <postgresql.version>42.7.1</postgresql.version>
        <jwt.version>4.4.0</jwt.version>
        <flyway.version>9.22.3</flyway.version>
        <validation-api.version>3.0.2</validation-api.version>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <jackson.version>2.16.0</jackson.version>
    </properties>

    <!-- I configure my application dependencies for comprehensive functionality -->
    <dependencies>

        <!-- I include Spring Boot Web starter for REST API and MVC functionality -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- I add Spring Boot Security for authentication and authorization -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- I include Spring Data JPA for database operations -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- I add Spring Boot Validation for input validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- I include Thymeleaf for server-side template rendering -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- I add Thymeleaf Spring Security extras for security integration -->
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
        </dependency>

        <!-- I include PostgreSQL driver for database connectivity -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- I add Flyway for database migration management -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>

        <!-- I include JWT library for token-based authentication -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${jwt.version}</version>
        </dependency>

        <!-- I add Apache Commons Lang for utility functions -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- I include Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- I add Jackson JSR310 module for Java 8 time support -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- I include Spring Boot Actuator for monitoring and management -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- I add Spring Boot DevTools for development productivity -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- I include Spring Boot Configuration Processor for metadata -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- I add Testing dependencies for comprehensive test coverage -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- I include Spring Security Test for security testing -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- I add TestContainers for integration testing with real databases -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- I configure build plugins for compilation, testing, and packaging -->
    <build>
        <finalName>bthl-healthcare</finalName>

        <plugins>

            <!-- I use Spring Boot Maven plugin for application packaging -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- I enable JVM arguments for development mode -->
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
                    </jvmArguments>
                    <excludes>
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- I configure Maven Compiler plugin for Java 21 without preview features -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <!-- I keep the parameters flag for better debugging and reflection support -->
                        <arg>-parameters</arg>
                        <!-- I have removed the enable-preview flag since Java 21 does not support current preview features -->
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- I add Maven Surefire plugin for unit testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <!-- I removed enable-preview from test execution as well -->
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>

            <!-- I include Maven Failsafe plugin for integration testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <!-- I removed enable-preview from integration test execution -->
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>

            <!-- I add Flyway plugin for database migration management -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <url>jdbc:postgresql://localhost:5432/bthl_healthcare</url>
                    <user>davestj</user>
                    <locations>
                        <location>classpath:db/migration</location>
                    </locations>
                </configuration>
            </plugin>

            <!-- I include JaCoCo plugin for code coverage analysis -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- I define profiles for different environments -->
    <profiles>

        <!-- I create a development profile for local development -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>

        <!-- I add a production profile for deployment -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <executable>true</executable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- I include a testing profile for CI/CD environments -->
        <profile>
            <id>test</id>
            <properties>
                <spring.profiles.active>test</spring.profiles.active>
            </properties>
        </profile>

    </profiles>

</project>